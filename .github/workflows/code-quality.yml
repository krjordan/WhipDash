name: Code Quality

on:
  pull_request:
    branches: [main, develop]

jobs:
  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install bundle analyzer
        run: yarn add --dev webpack-bundle-analyzer

      - name: Build and analyze bundle
        run: yarn analyze
        env:
          ANALYZE: true

      - name: Check if analysis files exist
        run: |
          if [ -d ".next/analyze" ]; then
            echo "Bundle analysis files found"
            ls -la .next/analyze/
          else
            echo "No bundle analysis files found, creating summary"
            mkdir -p .next/analyze
            echo "Bundle analysis completed" > .next/analyze/summary.txt
          fi

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: .next/analyze/
          retention-days: 7
        if: always()

  accessibility:
    name: Accessibility Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install wait-on and axe
        run: yarn global add wait-on @axe-core/cli

      - name: Build application
        run: yarn build:ci

      - name: Start server in background
        run: |
          yarn start &
          echo $! > server.pid

      - name: Wait for server to be ready
        run: wait-on http://localhost:3000 --timeout 60000

      - name: Run accessibility tests
        run: axe http://localhost:3000
        continue-on-error: true

      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm server.pid
          fi
